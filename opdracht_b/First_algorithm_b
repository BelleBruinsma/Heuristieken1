from classes import *
from sort import *
#from scipy.misc import toimage
import time

start_time = time.time()

# declare height and width of plate types
WIDTH_TYPE = {1: 50}
HEIGHT_TYPE = {1: 60}

# orders in a list [height, width, type], sorted by type > height > width
order_list = [[15, 15, 1], [5, 11, 1], [16, 27, 1], [13, 27, 1], [13, 13, 1], [19, 16, 1], [20, 19, 1], [17, 24, 1],
              [11, 22, 1], [11, 14, 1], [7, 23, 1], [14, 17, 1], [16, 24, 1], [20, 13, 1], [15, 10, 1], [19, 22, 1],
              [6, 15, 1], [4, 24, 1],

              # order 3
              [11, 10, 1], [13, 24, 1], [13, 22, 1], [9, 16, 1], [4, 10, 1], [5, 14, 1], [15, 25, 1], [7, 20, 1],
              [16, 12, 1], [12, 12, 1],
              [10, 19, 1], [19, 24, 1], [12, 27, 1], [6, 13, 1], [16, 23, 1], [17, 17, 1], [20, 17, 1], [9, 21, 1],
              [6, 19, 1],
              [12, 18, 1], [11, 19, 1], [18, 27, 1], [16, 12, 1], [16, 10, 1],

              # order 4
              [9, 22, 1], [11, 26, 1], [8, 12, 1], [8, 28, 1], [5, 28, 1], [8, 27, 1], [16, 19, 1], [4, 19, 1],
              [9, 25, 1], [18, 21, 1],
              [18, 25, 1], [11, 16, 1], [17, 27, 1], [11, 27, 1], [8, 14, 1], [10, 27, 1], [14, 21, 1], [12, 20, 1],
              [12, 15, 1]]

sort_ratio(order_list)

# initialize the first plate and shelf to be used by the algorithm
plate_list = [Plate(HEIGHT_TYPE[1], WIDTH_TYPE[1], order_list[0][2])]  # Why [0][2]
print(plate_list)
shelf_list = [Shelf(order_list[0][0], WIDTH_TYPE[1], order_list[0][2])]  # why 2x orderlist

# try to add every order to a shelf, if no available shelf is found, create new shelf with own height and type
for current_order in order_list:
    for current_shelf in shelf_list:
        if current_shelf.add_order(current_order[0], current_order[1]):  # van begin tot einde?
            break
        if current_shelf == shelf_list[-1]:
            shelf_type = current_order[2]
            shelf_list.append(Shelf(current_order[0], WIDTH_TYPE[shelf_type], shelf_type))

# print("The following shelfs have been created: \n")

# print the created shelfs in terminal
for x in shelf_list:
    print("**********************\n")
    print(x.state)
    # print("\n")

# try to add every shelf to a plate, if no available plate is found, create new plate with own height and type
for current_shelf in shelf_list:
    for current_plate in plate_list:
        if current_plate.add_shelf(current_shelf):
            break
        if current_plate == plate_list[-1]:
            plate_type = current_shelf.category
            plate_list.append(Plate(HEIGHT_TYPE[plate_type], WIDTH_TYPE[plate_type], plate_type))

# print("\n This resulted in the following way of filling the plates:\n")

# print the created plates in terminal
for x in plate_list:
    print("**********************\n")
    print(x.state)
    print("\n")

#toimage(plate_list[0].state).show()

print("--- %s seconds ---" % (time.time() - start_time))
